# .github/workflows/micropip-installable.yml
name: MICROPIP

on:
  push:

jobs:
  micropip-install-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build tools
        run: |
          pip install build twine

      - name: Build wheel
        run: python -m build --wheel

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheel
          path: dist/*.whl

  pyodide-test:
    runs-on: ubuntu-latest
    needs: micropip-install-test

    steps:
      - name: Download wheel
        uses: actions/download-artifact@v4
        with:
          name: wheel
          path: dist/

      - name: Set up Pyodide test environment
        run: |
          pip install pytest pytest-pyodide

      - name: Create test file
        run: |
          mkdir tests
          cat <<EOF > tests/test_install.py
          import pytest

          @pytest.mark.asyncio
          async def test_micropip_install():
              import micropip
              await micropip.install('dist/$(ls dist)')
          EOF

      #- name: Run test in Pyodide
      #  run: |
      #    pytest --pyodide
