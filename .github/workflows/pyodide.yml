name: Test jquantstats Pyodide install (Node.js only)

on:
  push:
    branches: [main]
  pull_request:

jobs:
  pyodide-nodejs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Build wheel
        run: |
          python3 -m pip install --upgrade build
          python3 -m build --wheel --outdir dist

      - name: Start HTTP server
        run: |
          python3 -m http.server 8000 &
          echo $! > server_pid.txt
          sleep 2

      - name: Install Pyodide and wheel via Node.js
        shell: bash
        run: |
          npm install pyodide

          node --input-type=module <<'EOF'
          import { loadPyodide } from "pyodide";
          import fs from "fs";

          async function main() {
            const pyodide = await loadPyodide({ indexURL: "https://cdn.jsdelivr.net/pyodide/v0.25.1/full/" });
            console.log("✅ Pyodide loaded");

            const files = fs.readdirSync('./dist');
            const wheel = files.find(f => f.endsWith(".whl"));
            if (!wheel) throw new Error("No wheel found");

            const wheelUrl = `http://localhost:8000/${wheel}`;
            console.log("Installing wheel from", wheelUrl);

            await pyodide.loadPackage("micropip");
            await pyodide.runPythonAsync("import micropip");
            await pyodide.runPythonAsync(`await micropip.install("${wheelUrl}")`);
            await pyodide.runPythonAsync("import jquantstats");
            await pyodide.runPythonAsync("print('✅ jquantstats imported successfully')");
          }

          main().catch(console.error);
          EOF

      - name: Kill HTTP server
        run: kill $(cat server_pid.txt) || true
