name: pyodide

# Trigger: This workflow runs on every push to the repository
on:
  push

# Permissions: Only read access to repository contents is needed
permissions:
  contents: read


jobs:
  test-pyodide:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install build tools
        run: python -m pip install --upgrade build

      - name: Build wheel
        run: python -m build --wheel --outdir dist

      - name: Start HTTP server in background
        run: |
          python -m http.server 8000 &
          echo $! > server_pid.txt
          sleep 2

      - name: Install Puppeteer
        run: npm install puppeteer

      - name: Run Puppeteer test to load pyodide & install wheel
        run: |
          node --input-type=module <<'EOF'
          import puppeteer from "puppeteer";

          (async () => {
            const browser = await puppeteer.launch({
              args: ['--no-sandbox', '--disable-setuid-sandbox']
            });
            const page = await browser.newPage();

            await page.goto('about:blank');

            // Expose console.log from the page context to GitHub Actions logs
            page.on('console', msg => console.log('PAGE LOG:', msg.text()));

            await page.evaluate(async () => {
              // Load Pyodide
              const pyodide = await loadPyodide({
                indexURL: "https://cdn.jsdelivr.net/pyodide/v0.25.1/full/"
            });
            console.log('âœ… Pyodide loaded');

            // Load micropip
            await pyodide.loadPackage('micropip');

            // Find your wheel filename served by local HTTP server
            // Note: Adjust wheel filename if needed
            const wheelUrl = 'http://127.0.0.1:8000/jquantstats.whl';

            console.log(`Installing wheel from: ${wheelUrl}`);

          })().catch(console.error);
          EOF

      - name: Stop HTTP server
        run: kill $(cat server_pid.txt) || true
